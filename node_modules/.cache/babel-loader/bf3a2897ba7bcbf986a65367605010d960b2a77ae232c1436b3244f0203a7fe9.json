{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilyal\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u05D1\\u05E8\\u05D0\\u05D5\\u05D3\\u05D4\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 8\\\\\\u05D0\\u05E7\\u05D5\\u05DC\\u05D5\\u05D2\\u05D9\\u05D4\\\\PlantTalk\\\\src\\\\components\\\\chat\\\\SuggestedQuestions.js\",\n  _s = $RefreshSig$();\n// src/components/chat/SuggestedQuestions.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport { usePlant } from '../../contexts/PlantContext';\nimport { useSensor } from '../../contexts/SensorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionsContainer = styled.div`\n  margin: ${({\n  theme\n}) => theme.spacing.lg} 0;\n`;\n_c = SuggestionsContainer;\nconst Title = styled.h4`\n  margin-bottom: ${({\n  theme\n}) => theme.spacing.sm};\n  color: ${({\n  theme\n}) => theme.colors.text.secondary};\n  font-size: ${({\n  theme\n}) => theme.typography.fontSize.sm};\n  font-weight: ${({\n  theme\n}) => theme.typography.fontWeight.medium};\n`;\n_c2 = Title;\nconst QuestionsList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${({\n  theme\n}) => theme.spacing.sm};\n`;\n_c3 = QuestionsList;\nconst QuestionChip = styled.button`\n  background-color: ${({\n  theme\n}) => theme.colors.surface};\n  border: 1px solid ${({\n  theme\n}) => theme.colors.primary};\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  padding: ${({\n  theme\n}) => `${theme.spacing.xs} ${theme.spacing.md}`};\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.lg};\n  font-size: ${({\n  theme\n}) => theme.typography.fontSize.sm};\n  cursor: pointer;\n  transition: all ${({\n  theme\n}) => theme.transitions.short};\n  \n  &:hover {\n    background-color: rgba(76, 175, 80, 0.1);\n    transform: translateY(-2px);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c4 = QuestionChip;\nconst SuggestedQuestions = ({\n  onSelectQuestion,\n  isPlantTyping\n}) => {\n  _s();\n  const {\n    plant\n  } = usePlant();\n  const {\n    sensorData\n  } = useSensor();\n\n  // Generate context-aware questions based on plant status and sensor data\n  const generateQuestions = () => {\n    const generalQuestions = [\"How often should I water you?\", \"What's the best temperature for you?\", \"Do you need direct sunlight?\", \"How do I know if you're healthy?\"];\n    let contextualQuestions = [];\n\n    // Add questions based on plant status\n    switch (plant.status) {\n      case 'thirsty':\n        contextualQuestions.push(\"Why do you need more water?\", \"How much water should I give you?\");\n        break;\n      case 'cold':\n        contextualQuestions.push(\"What's your ideal temperature?\", \"How does cold affect you?\");\n        break;\n      case 'hot':\n        contextualQuestions.push(\"Why is too much heat bad for you?\", \"How can I cool you down?\");\n        break;\n      default:\n        break;\n    }\n\n    // Add questions based on sensor readings\n    if (sensorData.soilMoisture < 40) {\n      contextualQuestions.push(\"When will you need water again?\");\n    }\n    if (sensorData.light < 40) {\n      contextualQuestions.push(\"Do you need more light?\");\n    }\n\n    // Combine and return uniquified questions\n    const allQuestions = [...contextualQuestions, ...generalQuestions];\n    return allQuestions.slice(0, 5); // Limit to 5 suggestions\n  };\n  const suggestedQuestions = generateQuestions();\n  return /*#__PURE__*/_jsxDEV(SuggestionsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Suggested Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionsList, {\n      children: suggestedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(QuestionChip, {\n        onClick: () => onSelectQuestion(question),\n        disabled: isPlantTyping,\n        children: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(SuggestedQuestions, \"gWCYRmXJOCmIWelIRMaDM93sNLQ=\", false, function () {\n  return [usePlant, useSensor];\n});\n_c5 = SuggestedQuestions;\nexport default SuggestedQuestions;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SuggestionsContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"QuestionsList\");\n$RefreshReg$(_c4, \"QuestionChip\");\n$RefreshReg$(_c5, \"SuggestedQuestions\");","map":{"version":3,"names":["React","styled","usePlant","useSensor","jsxDEV","_jsxDEV","SuggestionsContainer","div","theme","spacing","lg","_c","Title","h4","sm","colors","text","secondary","typography","fontSize","fontWeight","medium","_c2","QuestionsList","_c3","QuestionChip","button","surface","primary","xs","md","borderRadius","transitions","short","_c4","SuggestedQuestions","onSelectQuestion","isPlantTyping","_s","plant","sensorData","generateQuestions","generalQuestions","contextualQuestions","status","push","soilMoisture","light","allQuestions","slice","suggestedQuestions","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","onClick","disabled","_c5","$RefreshReg$"],"sources":["C:/Users/ilyal/OneDrive/Рабочий стол/בראודה/סמסטר 8/אקולוגיה/PlantTalk/src/components/chat/SuggestedQuestions.js"],"sourcesContent":["// src/components/chat/SuggestedQuestions.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { usePlant } from '../../contexts/PlantContext';\r\nimport { useSensor } from '../../contexts/SensorContext';\r\n\r\nconst SuggestionsContainer = styled.div`\r\n  margin: ${({ theme }) => theme.spacing.lg} 0;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  margin-bottom: ${({ theme }) => theme.spacing.sm};\r\n  color: ${({ theme }) => theme.colors.text.secondary};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  font-weight: ${({ theme }) => theme.typography.fontWeight.medium};\r\n`;\r\n\r\nconst QuestionsList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: ${({ theme }) => theme.spacing.sm};\r\n`;\r\n\r\nconst QuestionChip = styled.button`\r\n  background-color: ${({ theme }) => theme.colors.surface};\r\n  border: 1px solid ${({ theme }) => theme.colors.primary};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  padding: ${({ theme }) => `${theme.spacing.xs} ${theme.spacing.md}`};\r\n  border-radius: ${({ theme }) => theme.borderRadius.lg};\r\n  font-size: ${({ theme }) => theme.typography.fontSize.sm};\r\n  cursor: pointer;\r\n  transition: all ${({ theme }) => theme.transitions.short};\r\n  \r\n  &:hover {\r\n    background-color: rgba(76, 175, 80, 0.1);\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst SuggestedQuestions = ({ onSelectQuestion, isPlantTyping }) => {\r\n  const { plant } = usePlant();\r\n  const { sensorData } = useSensor();\r\n  \r\n  // Generate context-aware questions based on plant status and sensor data\r\n  const generateQuestions = () => {\r\n    const generalQuestions = [\r\n      \"How often should I water you?\",\r\n      \"What's the best temperature for you?\",\r\n      \"Do you need direct sunlight?\",\r\n      \"How do I know if you're healthy?\"\r\n    ];\r\n    \r\n    let contextualQuestions = [];\r\n    \r\n    // Add questions based on plant status\r\n    switch (plant.status) {\r\n      case 'thirsty':\r\n        contextualQuestions.push(\r\n          \"Why do you need more water?\",\r\n          \"How much water should I give you?\"\r\n        );\r\n        break;\r\n      case 'cold':\r\n        contextualQuestions.push(\r\n          \"What's your ideal temperature?\",\r\n          \"How does cold affect you?\"\r\n        );\r\n        break;\r\n      case 'hot':\r\n        contextualQuestions.push(\r\n          \"Why is too much heat bad for you?\",\r\n          \"How can I cool you down?\"\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    // Add questions based on sensor readings\r\n    if (sensorData.soilMoisture < 40) {\r\n      contextualQuestions.push(\"When will you need water again?\");\r\n    }\r\n    \r\n    if (sensorData.light < 40) {\r\n      contextualQuestions.push(\"Do you need more light?\");\r\n    }\r\n    \r\n    // Combine and return uniquified questions\r\n    const allQuestions = [...contextualQuestions, ...generalQuestions];\r\n    return allQuestions.slice(0, 5); // Limit to 5 suggestions\r\n  };\r\n  \r\n  const suggestedQuestions = generateQuestions();\r\n  \r\n  return (\r\n    <SuggestionsContainer>\r\n      <Title>Suggested Questions</Title>\r\n      <QuestionsList>\r\n        {suggestedQuestions.map((question, index) => (\r\n          <QuestionChip\r\n            key={index}\r\n            onClick={() => onSelectQuestion(question)}\r\n            disabled={isPlantTyping}\r\n          >\r\n            {question}\r\n          </QuestionChip>\r\n        ))}\r\n      </QuestionsList>\r\n    </SuggestionsContainer>\r\n  );\r\n};\r\n\r\nexport default SuggestedQuestions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}